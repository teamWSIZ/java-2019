/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.javafx.example;

import javafx.application.Application;
import javafx.scene.Group;
import javafx.scene.Scene;
import javafx.scene.shape.Polygon;
import javafx.scene.shape.Rectangle;
import javafx.scene.shape.Shape;
import javafx.stage.Stage;

public class App extends Application {

    @Override
    public void start(Stage primaryStage) throws Exception {
        Group group = new Group();
        Scene scene = new Scene(group, 512, 512);

        primaryStage.setScene(scene);
        primaryStage.show();

        double xCenter = scene.getWidth() / 2;
        double yCenter = scene.getHeight() / 2;

        group.getChildren().add(createSquare(xCenter, yCenter));

        //TODO
        //for(int i=0;i<100;i++)
            group.getChildren().add(createTriangle(xCenter, yCenter));

        //TODO po wykonaniu ćwiczenień proszę włączyć kod obiektowy
        //for(int i = 0; i<100;i++)
          //  new FigureRectangle(group, new Rectangle());


    }

    private Shape createSquare(double xcenter, double ycenter) {
        Rectangle rectangle = new Rectangle();

        double a = RandomHelper.randomDimension();

        rectangle.setWidth(a);
        rectangle.setHeight(a);
        rectangle.setFill(RandomHelper.randomColor());

        //Ustawmy początkowo prostokąt w środku okna

        rectangle.setTranslateX(xcenter);
        rectangle.setTranslateY(ycenter);

        //TODO ćwiczenie: proszę ustawić prostokąt dokładnie w środku
        //należy odjąć od środka ekranu odpowiednie rozmiary

        //TODO Po usunięciu komentarzy prostokąt zostanie rozmieszczony
        //w losowych miejscach ekranu

        //rectangle.setTranslateX(xcenter + RandomHelper.randomTranslation());
        //rectangle.setTranslateY(ycenter + RandomHelper.randomTranslation());

        return rectangle;
    }

    private Shape createTriangle(double xcenter, double ycenter) {
        Polygon polygon = new Polygon();

        //TODO
        //Proszę uzupełnić funkcję tak, żeby generowała losowe trójkąty równoboczne

        double a = RandomHelper.randomDimension();
        double h = Math.sqrt(3.0)/2.0*a;

        Double[] points = new Double[]{
                0.0,0.0,
                a,0.0,
                a/2.0,h
        };

        polygon.setFill(RandomHelper.randomColor());
        polygon.getPoints().addAll(points);

        polygon.setTranslateX(xcenter + RandomHelper.randomTranslation());
        polygon.setTranslateY(ycenter + RandomHelper.randomTranslation());

        return polygon;
    }
}
